name: Deploy Frontend to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'Lab4/trip-organizer-web/**'
      - '.github/workflows/frontend-deploy.yml'
  workflow_dispatch: # Allow manual trigger

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  NODE_VERSION: '18.x'
  PROJECT_PATH: 'Lab4/trip-organizer-web'

jobs:
  build:
    name: Build Frontend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ${{ env.PROJECT_PATH }}/package-lock.json

    - name: Install dependencies
      working-directory: ${{ env.PROJECT_PATH }}
      run: npm ci

    - name: Fix security vulnerabilities
      working-directory: ${{ env.PROJECT_PATH }}
      run: |
        npm audit fix --force
        npm audit fix || true
      continue-on-error: true

    - name: Create production environment file
      working-directory: ${{ env.PROJECT_PATH }}
      run: |
        echo "REACT_APP_API_URL=https://triporganizer-api.onrender.com" > .env.production
        echo "GENERATE_SOURCEMAP=false" >> .env.production
        echo "PUBLIC_URL=/EGUI" >> .env.production

    - name: Build application for production
      working-directory: ${{ env.PROJECT_PATH }}
      run: npm run build

    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact to Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: ${{ env.PROJECT_PATH }}/build

  deploy:
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

    - name: Generate deployment summary
      run: |
        echo "## Frontend Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Deployment URL**: ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment**: Production" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Status**: âœ… Success" >> $GITHUB_STEP_SUMMARY
        echo "- **Deployment Time**: $(date -u)" >> $GITHUB_STEP_SUMMARY
